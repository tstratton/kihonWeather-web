<html>
<head>
<title>Kihon Weather</title>
</head>
<body>
<button id="setCookie">Set</button> <button id="getCookie">Get</button> <button id="clearCookie">Clear</button>
<br>
<label for="apikey">Wunderground API key</label>
<br>
<input  type="text" id="apikey" name="apikey" maxlength="20" size="30">
<br>
<label for="zip">US Zip Code</label>
<br>
<input  type="text" id="zip" name="zip" maxlength="50" size="30">
<br>
<button id="weather">Refresh</button>
<br>
<hr>
<div id="time"></div>
<div id="location"></div>
<div id="status"></div>
<div id="temp"></div>
<div id="sun"></div>
<hr>
<div id="precipTitle"></div><br>
<canvas id="precipChart" width="600" height="200"></canvas>
<br>
<div id="tempTitle"></div><br>
<canvas id="tempChart" width="600" height="200"></canvas>
<br>
<div id="forecast"></div>
<br>
</body>
<script type="text/javascript" src="zepto.min.js"></script>
<script type="text/javascript" src="Chart.min.js"></script>
<script type="text/javascript" >
$(function() {
    var protocol = ('https:' == document.location.protocol ? 'https://' : 'http://');
    var baseUrl = "api.wunderground.com/api/";
    var middleUrl = "/conditions/astronomy/forecast/hourly/q/";
    var endUrl = ".json";
    var sep = "/";
    var myPrecipChart = null;
    var myTempChart = null;

    var keyname = "apikey";
    var zipname = "zip";

    if (getPersistentValue(keyname)) {
        $("#"+keyname).val(getPersistentValue(keyname));
    }
    if (getPersistentValue(zipname)) {
        $("#"+zipname).val(getPersistentValue(zipname));
    }

    $("#setCookie").click(function (event) {
        setPersistentValue(keyname, $("#"+keyname).val());
        setPersistentValue(zipname, $("#"+zipname).val());
    });

    $("#getCookie").click(function (event) {
        $("#"+keyname).val(getPersistentValue(keyname));
        $("#"+zipname).val(getPersistentValue(zipname));
    });

    $("#clearCookie").click(function (event) {
        clearPersistentValues();
        $("#"+keyname).val(null);
        $("#"+zipname).val(null);
    });

    $("#weather").click(function (event) {

        var fullUrl = protocol + baseUrl + $("#"+keyname).val() + middleUrl + $("#"+zipname).val() + endUrl;
        console.log(fullUrl);

        $.ajax({
            url : fullUrl,
            dataType : "jsonp",
            success : function(parsed_json) {
                //console.log(JSON.stringify(parsed_json, null, " "));

                $("#time").text("")
                $("#location").text("")
                $("#status").text("")
                $("#temp").text("")
                $("#sun").text("")
                $("#forecast").text("")
                $("#tempTitle").text("")
                $("#precipTitle").text("")

                if (parsed_json['response']['error']) {
                    $("#location").text(parsed_json['response']['error']['type']);
                    $("#temp").text(parsed_json['response']['error']['description']);
                    return;
                }

                $("#time").text(parsed_json['current_observation']['observation_time']);
                $("#location").text(parsed_json['current_observation']['display_location']['full']);
                $("#status").text(parsed_json['current_observation']['weather']);
                $("#temp").text(parsed_json['current_observation']['temperature_string']);
                var sunrise = parsed_json['sun_phase']['sunrise']['hour'] + ":" + parsed_json['sun_phase']['sunrise']['minute']
                var sunset = parsed_json['sun_phase']['sunset']['hour'] + ":" + parsed_json['sun_phase']['sunset']['minute']
                $("#sun").text("Sunrise " + sunrise + " Sunset " + sunset);

                var allforecast =  parsed_json['forecast']['txt_forecast']['forecastday'];
                var fullforecast = [];
                for (var idx = 0; idx < allforecast.length; idx++) {
                    fullforecast.push(allforecast[idx]['title']);
                    fullforecast.push(allforecast[idx]['fcttext']);
                    fullforecast.push(allforecast[idx]['pop'] + "% chance of precipitation");
                    fullforecast.push("\n");
                }
                $("#forecast").html("<pre>" + fullforecast.join('\n') + "</pre>");

                var hourly = parsed_json['hourly_forecast'];
                var hourlytitle = [];
                var hourlytemp = [];
                var hourlyprecip = [];

                var currday = "";
                for (var idx = 0; idx < hourly.length; idx++) {
                    var day = hourly[idx]['FCTTIME']['weekday_name_abbrev'];
                    if (currday != day) {
                        currday = day;
                    } else {
                        day = "";
                    }
                    var hour = hourly[idx]['FCTTIME']['hour'];
                    if (hour == "0") {
                        hour = "12am";
                    } else if (hour > 12) {
                        hour = (hour - 12) + "pm";
                    } else if (hour == 12) {
                        hour = hour + "pm";
                    } else {
                        hour = hour + "am";
                    }
                    hourlytitle.push(day + " " + hour);
                    hourlytemp.push(hourly[idx]['temp']['english']);
                    hourlyprecip.push(hourly[idx]['pop']);
                }

                var tempCtx = $("#tempChart").get(0).getContext("2d");
                var precipCtx = $("#precipChart").get(0).getContext("2d");

                var chartOptions = {
                    barValueSpacing : 0,
                    scaleBeginAtZero: true,
                    showTooltips: false,
                };
                var chartPrecipData = {
                    labels: hourlytitle,
                    datasets: [
                        {
                            //FIXME use this for a constant scale for now
                            fillColor: "white",
                            strokeColor: "white",
                            data: [100]
                        },
                        {
                            label: "Precipitation",
                            fillColor: "rgba(151,187,205,0.2)",
                            strokeColor: "rgba(151,187,205,1)",
                            pointColor: "rgba(151,187,205,1)",
                            pointStrokeColor: "#fff",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "rgba(151,187,205,1)",
                            data: hourlyprecip
                        }
                    ]
                };
                if (myPrecipChart != null) {
                    myPrecipChart.clear();
                    myPrecipChart.destroy();
                }
                myPrecipChart = new Chart(precipCtx).Line(chartPrecipData, chartOptions);

                var chartTempData = {
                    labels: hourlytitle,
                    datasets: [
                        {
                            //FIXME use this for a constant scale for now
                            fillColor: "white",
                            strokeColor: "white",
                            data: [100]
                        },
                        {
                            label: "Temperature",
                            fillColor: "rgba(220,220,220,0.2)",
                            strokeColor: "rgba(220,220,220,1)",
                            pointColor: "rgba(220,220,220,1)",
                            pointStrokeColor: "#fff",
                            pointHighlightFill: "#fff",
                            pointHighlightStroke: "rgba(220,220,220,1)",
                            data: hourlytemp
                        }
                    ]
                };
                if (myTempChart != null) {
                    myTempChart.clear();
                    myTempChart.destroy();
                }
                chartOptions.showTooltips = true;
                myTempChart = new Chart(tempCtx).Line(chartTempData, chartOptions);

                $("#tempTitle").text("Temperature")
                $("#precipTitle").text("Chance of Precipitation")
            }
        });

        return false;
    });
});

function setPersistentValue(key, value) {
    //Check whether local storage is available or not
    if (window.localStorage) {
        window.localStorage.setItem(key, value);
        return true;
    }
    return false;
}
function getPersistentValue(key) {
    //Check whether local storage is available or not
    if (window.localStorage) {
        return window.localStorage.getItem(key);
    }
}

function clearPersistentValues() {
    //Check whether local storage is available or not
    if (window.localStorage) {
        window.localStorage.clear();
    }
}

</script>
</html>
